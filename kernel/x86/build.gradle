plugins {
    id 'raviolios.java'
}

sourceSets {
    main {
        java {
            srcDirs = Collections.singleton(file("java"))
        }
    }
}

def archDir = new File(rootDir, "bin/x86")
def isoDir = new File(archDir, 'isodir')
def isoFile = new File(archDir, 'raviolios-i386.iso')

dependencies {
    implementation project(':kernel:core')
}

task compileCpp (type: Exec) {
    workingDir(rootDir)
    commandLine 'make', '-f', 'gradle.mk', 'ARCH=x86', 'kernel'
}
assemble.finalizedBy(compileCpp)

task buildIcb (type: IcbTask) {
    dependsOn(classes)
    classes = files(sourceSets.main.output.classesDirs, project(':kernel:core').sourceSets.main.output.classesDirs)
    output = new File(isoDir, 'boot/raviolios.icb')
}

task prepareIso(type: Copy) {
    dependsOn(assemble, buildIcb)
    from (file('isodir'))
    from (new File(archDir, 'raviolios-i386.elf')) {
        rename '.*', 'boot/raviolios-i386.elf'
    }
    into isoDir
}

task buildIso (type: Exec) {
	dependsOn(prepareIso)
	workingDir(rootDir)
	commandLine 'grub-mkrescue', '-o', isoFile, isoDir
}

task emulate (type: Exec) {
    dependsOn(buildIso)
    workingDir(rootDir)
    commandLine 'qemu-system-i386', '-cdrom', isoFile, '-m', '16M', '-gdb', 'tcp::1234', '-serial', 'stdio'
}

task debug (type: Exec) {
    dependsOn(buildIso)
    workingDir(rootDir)
    commandLine 'qemu-system-i386', '-cdrom', isoFile, '-m', '16M', '-gdb', 'tcp::1234', '-serial', 'stdio', '-S'
}
